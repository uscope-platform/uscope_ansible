########################################################
#                       GENERATE IMAGE                 #
########################################################

- hosts: localhost
  vars_prompt:
    - name: generate_image
      prompt: Is image generation Needed?
    - name: ansible_become_password
      prompt: Specify root password (used to deal with loopback devices)
  roles:
    - role: image_generation
      when: generate_image == 'yes'
      vars:
        - image_file: "/home/fils/working_image.img"
          yocto_image_dir: /home/fils/image/


- hosts: localhost
  tasks:
    - pause: 
        prompt: "Write Generated image to SD card and boot uzed"
        echo: no



########################################################
#             GROW ROOT PARTITION TO FILL DRIVE        #
########################################################


- hosts: uzed
  remote_user: root
  vars_prompt:
      - name: resize_fs
        prompt: Is file system resizing needed?
  roles:
    - role: fs_resizing
      when: resize_fs == 'yes'


########################################################
#       BUILD CONTAINERS ON HOST FOR DEPLOYMENT        #
########################################################


- hosts: localhost
  roles:
    - domain_name_assignment

- hosts: localhost
  roles:
    - docker_build
  vars:
    - domain_name: "{{constructed_domain_name}}"


########################################################
#             PREPARE HOST ENVIRONMENT                 #
########################################################

- hosts: uzed
  remote_user: root
  roles:
    - containers_deploy

########################################################
#   UPDATE DOMAIN NAME ON TARGET                       #
########################################################


- hosts: uzed
  remote_user: root
  roles:
    - avahi_conf_update


########################################################
#   UPDATE DOMAIN NAME CFG AFTER SUCCESSFULL DEPLOY    #
########################################################



- hosts: localhost
  tasks:
    - name: Update domain name config
      replace:
        path: domain_name.cfg
        regexp: '(\s+)DOMAIN_NAME_PROGRESSIVE={{old_domain_progressive}}(\s+.*)?$'
        replace: '\1DOMAIN_NAME_PROGRESSIVE={{new_domain_progressive}}\2'

