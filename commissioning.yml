########################################################
########################################################
#       BUILD CONTAINERS ON HOST FOR DEPLOYMENT        #
########################################################
########################################################

- hosts: localhost
  vars:
    docker_source_dir: /home/fils/git/uscope_docker
    github_url: git@github.com:filssavi
    remote_host: root@uscope_0.local
  tasks:

  #               SETUP BUILD ENVIRONMENT

  - name: Clone uscope docker repo
    git:
      repo: "{{github_url + '/uscope_docker.git'}}"
      dest: docker

  - name: enable buildx
    shell: 
    args:
      cmd: docker buildx install
      chdir: docker

  - name: create build context
    shell: 
    args:
      cmd: docker buildx create --use
      chdir: docker

  #                     BUILD CONTAINERS                 
  
  - name: Build driver container
    shell: 
    args:
      cmd: docker buildx build --ssh default --platform linux/arm/v7 -t driver:latest  -o type=docker,dest=- driver > driver.tar
      chdir: docker

  - name: Build database container
    shell: 
    args:
      cmd: docker buildx build --ssh default --platform linux/arm/v7 -t database:latest  -o type=docker,dest=- database > database.tar
      chdir: docker

  - name: Build server container
    shell: 
    args:
      cmd: docker buildx build --ssh default --platform linux/arm/v7 -t server:latest  -o type=docker,dest=- server > server.tar
      chdir: docker

  #             BUILD PRODUCTION WEB APP ON HOST

  - import_tasks: generate_cert.yml
    vars:
      cert_path: docker/client/certs

  - import_tasks: uscope_webapp_builder.yml
    vars:
      gh_url: '{{github_url}}'

  - name: Delete server key to avoid leaks
    file:
      path: docker/client/certs/uscope_0.pem
      state: absent

  #               PUSH CONTAINERS TO TARGET

  - name: push driver images to target
    command: 
    args:
      cmd:  scp driver.tar {{remote_host}}:/home/root
      chdir: docker
  
  - name: push server images to target
    command: 
    args:
      cmd:  scp server.tar {{remote_host}}:/home/root
      chdir: docker

  - name: push database images to target
    command: 
    args:
      cmd:  scp database.tar {{remote_host}}:/home/root
      chdir: docker

  - name: push client images to target
    command: 
    args:
      cmd:  scp client.tar {{remote_host}}:/home/root
      chdir: docker
  
  - name: push docker-compose 
    command: 
    args:
      cmd:  scp docker-compose_zed.yml {{remote_host}}:/home/root/docker-compose.yml
      chdir: docker

  #               CLEAN UP BUILD DIRECTORY

  - name: Clean up docker directory
    file:
      path: docker
      state: absent

  - name: Clean up webapp directory
    file:
      path: webapp
      state: absent



########################################################
########################################################
#             PREPARE HOST ENVIRONMENT                 #
########################################################
########################################################

- hosts: uzed
  remote_user: root
  tasks:

#             PREPARE HOST ENVIRONMENT

    - name: Install docker compose
      pip:
        name: docker-compose

#             ENABLE SERVICES

    - name: Enable docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Enable containerd
      systemd:
        name: containerd
        enabled: yes
        state: started

#              LOAD CONTAINERS

    - name: Load Driver image
      command: 
      args: 
        cmd: docker load --input driver.tar
        chdir: /home/root

    - name: Load Server image
      command: 
      args: 
        cmd: docker load --input server.tar
        chdir: /home/root

    - name: Load Database image
      command: 
      args: 
        cmd: docker load --input database.tar
        chdir: /home/root
    
    - name: Load Client image
      command: 
      args: 
        cmd:  docker load --input client.tar
        chdir: /home/root